{"version":3,"sources":["components/Header.js","components/Loading.js","components/Listings.js","components/NoListings.js","components/Options.js","components/Dapp.js","reportWebVitals.js","index.js"],"names":["Header","Component","Loading","className","Listings","props","contract","state","tables","undefined","this","outputListings","a","data","listings","results","Object","entries","item","tableRows","listing","listingId","priceInGHST","row","href","target","rel","push","getItemType","itemDetails","name","table","setState","NoListings","Options","values","categoryOptions","label","value","erc","onSubmit","handleOptionsSubmit","defaultValue","category","map","option","type","min","max","valueDifference","Dapp","divideBy","BigNumber","from","aavegotchiContract","connect","bind","getListings","provider","ethers","providers","JsonRpcProvider","Contract","abi","sort","b","getERC1155Listings","formattedListings","erc1155TypeId","priceInWei","formattedTypeId","toNumber","formattedListingId","formattedpriceInWei","div","hasOwnProperty","groupedListings","orderedListings","length","ordered","orderItems","lowest","secondLowest","orderedSlice","slice","grouped","groupListings","orderGroupedListings","orderListings","e","preventDefault","newCategory","parseInt","newDifference","difference","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2kkFAEaA,EAAb,4JACC,WACC,OACC,mCACC,iCACC,8EALL,GAA4BC,aCAfC,EAAb,4JACC,WACC,OACC,mCACC,qBAAKC,UAAU,0BAAf,SACC,mBAAGA,UAAU,oBAAb,gCALL,GAA6BF,aCAhBG,EAAb,kDACC,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IAEDC,SAAW,EAAKD,MAAMC,SAE3B,EAAKC,MAAQ,CACZC,YAAQC,GANS,EADpB,qDAWC,WACCC,KAAKC,mBAZP,mEAeC,4DAAAC,EAAA,sDACOC,EAAOH,KAAKL,MAAMS,SAElBC,EAAU,GAHjB,MAKgCC,OAAOC,QAAQJ,GAL/C,+DAKaK,EALb,KAKmBJ,EALnB,KAMQK,EAAY,GANpB,cAQwBL,GARxB,IAQE,2BAAWM,EAAqB,QACvBC,EAA2BD,EAA3BC,UAAWC,EAAgBF,EAAhBE,YAEbC,EACL,+BACC,6BAAI,mBAAGC,KAAI,iDAA4CH,GAAaI,OAAO,SAASC,IAAI,aAApF,SAAkGL,MACtG,6BAAKC,MAFGD,GAMVF,EAAUQ,KAAKJ,GAlBlB,+CAsB4Bb,KAAKJ,SAASsB,YAAYV,GAtBtD,QAsBQW,EAtBR,OAuBQC,EAAOD,EAAY,GAEnBE,EACL,sBAAK5B,UAAU,sBAAf,UAEC,qBAAIA,UAAU,cAAd,UAA6B2B,EAA7B,IAAmC,sCAASZ,EAAT,UAEnC,wBAAOf,UAAU,cAAjB,UACC,gCACC,+BACC,yCACA,4CAGF,gCACEgB,SAZsCD,GAmB3CH,EAAQY,KAAKI,GAEbrB,KAAKsB,SAAS,CACbxB,OAAQO,IAhDX,4EAfD,0EAqEC,WACC,OACC,qBAAKZ,UAAU,WAAf,SAA2BO,KAAKH,MAAMC,aAvEzC,GAA8BP,aCAjBgC,EAAb,4JACC,WACC,OACC,mCACC,qBAAK9B,UAAU,0BAAf,SACC,oBAAGA,UAAU,oBAAb,0CAA8D,uBAA9D,6DALL,GAAgCF,aCAnBiC,EAAb,kDACC,WAAY7B,GAAQ,IAAD,8BAClB,cAAMA,IAED8B,OAAS,EAAK9B,MAAM8B,OAEzB,EAAKC,gBAAkB,CACtB,CACCC,MAAO,WACPC,MAAO,IACPC,IAAK,QAEN,CACCF,MAAO,aACPC,MAAO,IACPC,IAAK,SAdW,EADpB,0CAoBC,WACC,OACC,qBAAKpC,UAAU,UAAf,SACC,uBAAMA,UAAU,gBAAgBqC,SAAU9B,KAAKL,MAAMoC,oBAArD,UAEC,kCACC,6CAEA,wBACCX,KAAK,WACL3B,UAAU,wCACVuC,aAAchC,KAAKyB,OAAOQ,SAH3B,SAKEjC,KAAK0B,gBAAgBQ,KAAI,SAACC,GAAD,OACzB,wBAA2BP,MAAOO,EAAOP,MAAzC,SACEO,EAAOR,OADIQ,EAAOP,eAOvB,2DAGC,uBACCR,KAAK,aACL3B,UAAU,iBACV2C,KAAK,SACLC,IAAI,IACJC,IAAI,KACJN,aAAchC,KAAKyB,OAAOc,qBAI5B,uBAAO9C,UAAU,wCAAwC2C,KAAK,SAASR,MAAM,oBAtDlF,GAA6BrC,aCOhBiD,EAAb,kDACC,WAAY7C,GAAQ,IAAD,8BAClB,cAAMA,IAGD8C,SAAWC,IAAUC,KAAK,uBAG/B,EAAKC,mBAAqB,EAAKC,UAE/B,EAAKd,oBAAsB,EAAKA,oBAAoBe,KAAzB,gBAE3B,EAAKjD,MAAQ,CACZ4B,OAAQ,CACPQ,SAAU,EACVM,gBAAiB,IAElBH,KAAM,OACNhC,cAAUL,GAjBO,EADpB,qDAuBC,WACCC,KAAK+C,gBAxBP,qBA2BC,WAEC,IAAMC,EAAW,IAAIC,IAAOC,UAAUC,gBAAgB,qCAStD,OAH2B,IAAIF,IAAOG,SAHZ,6CAGwCC,EAAKL,GAG7CH,QAAQG,KAtCpC,wBAyCC,SAAWtC,GACV,OAAOA,EAAQ4C,MAAK,SAACpD,EAAGqD,GAAJ,OAAUrD,EAAC,YAAkBqD,EAAC,iBA1CpD,kEA6CC,kDAAArD,EAAA,sEAGwBF,KAAK4C,mBAAmBY,mBAAmBxD,KAAKH,MAAM4B,OAAOQ,SAAU,SAAU,MAHzG,OAGO7B,EAHP,OAMOqD,EAAoB,GAN3B,cASuBrD,GATvB,IASC,2BAAWM,EAAqB,QAEvBC,EAAyCD,EAAzCC,UAAW+C,EAA8BhD,EAA9BgD,cAAeC,EAAejD,EAAfiD,WAG5BC,EAAkBF,EAAcG,WAChCC,EAAqBnD,EAAUkD,WAG/BE,EAAsBJ,EAAWK,IAAIhE,KAAKyC,UAE1C7B,EAAcmD,EAAoBF,WAGnCJ,EAAkBQ,eAAeL,KAAkBH,EAAkBG,GAAmB,IAG7FH,EAAkBG,GAAiB3C,KAAK,CACvCN,UAAWmD,EACXlD,gBA5BH,uDAgCQ6C,GAhCR,gDA7CD,+HAgFC,WAA2BS,GAA3B,mCAAAhE,EAAA,sEACwBgE,EADxB,OACO9D,EADP,OAIO+D,EAAkB,GAJzB,MAM+B7D,OAAOC,QAAQH,GAN9C,kEAMaI,EANb,QAMmBE,EANnB,MAQc0D,QAAU,GARxB,sDAWQC,EAAUrE,KAAKsE,WAAW5D,GAG1B6D,EAAS7D,EAAQ,GAAR,YAET8D,EAAe9D,EAAQ,GAAR,aACN8D,EAAeD,GAAUC,EAAgB,KAG5CxE,KAAKH,MAAM4B,OAAOc,kBAEvBkC,EAAeJ,EAAQK,MAAM,EAAG,GAGtCP,EAAgB3D,GAAQiE,GAzB3B,4DA6BQN,GA7BR,iDAhFD,uHAgHC,8BAAAjE,EAAA,6DAWOyE,EAAU3E,KAAK4E,gBAXtB,SAc6B5E,KAAK6E,qBAAqBF,GAdvD,OAcOG,EAdP,OAiBC9E,KAAKsB,SAAS,CAAClB,SAAU0E,IAjB1B,gDAhHD,uFAoIC,SAAoBC,GACnBA,EAAEC,iBAEF,IAAMC,EAAcC,SAASH,EAAEhE,OAAOkB,SAASL,OACzCuD,EAAgBD,SAASH,EAAEhE,OAAOqE,WAAWxD,OAEnD5B,KAAKsB,SAAS,CACbG,OAAQ,CACPQ,SAAUgD,EACV1C,gBAAiB4C,GAElB/E,cAAUL,GAEXC,KAAK+C,eAjJP,oBAoJC,WACC,OAAK/C,KAAKH,MAAMO,SASPE,OAAO+E,KAAKrF,KAAKH,MAAMO,UAAUgE,OAExC,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,CAASrC,oBAAqB/B,KAAK+B,oBAAqBN,OAAQzB,OAChE,cAAC,EAAD,CAAUI,SAAUJ,KAAKH,MAAMO,SAAUR,SAAUI,KAAK4C,wBAM1D,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,CAASb,oBAAqB/B,KAAK+B,oBAAqBN,OAAQzB,OAChE,cAAC,EAAD,OArBA,qCACC,cAAC,EAAD,IACA,cAAC,EAAD,CAAS+B,oBAAqB/B,KAAK+B,oBAAqBN,OAAQzB,KAAKH,MAAM4B,SAC3E,cAAC,EAAD,WA1JL,GAA0BlC,aCGX+F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,CAAMhE,SAAS,QAEhBiE,SAASC,eAAe,SAMzBb,M","file":"static/js/main.e6a930af.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nexport class Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<header>\r\n\t\t\t\t\t<h1>Aavegotchi Baazaar Difference Finder</h1>\r\n\t\t\t\t</header>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\n\r\nexport class Loading extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"listings listings--none\">\r\n\t\t\t\t\t<p className=\"listings__loading\">Loading...</p>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}\r\n","import { Component } from 'react';\r\n\r\nexport class Listings extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.contract = this.props.contract;\r\n\r\n\t\tthis.state = {\r\n\t\t\ttables: undefined,\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.outputListings();\r\n\t}\r\n\r\n\tasync outputListings() {\r\n\t\tconst data = this.props.listings;\r\n\r\n\t\tconst results = [];\r\n\r\n\t\tfor (const [item, listings] of Object.entries(data)) {\r\n\t\t\tconst tableRows = [];\r\n\r\n\t\t\tfor (const listing of listings) {\r\n\t\t\t\tconst { listingId, priceInGHST } = listing;\r\n\r\n\t\t\t\tconst row = (\r\n\t\t\t\t\t<tr key={listingId}>\r\n\t\t\t\t\t\t<td><a href={`https://aavegotchi.com/baazaar/erc1155/${listingId}`} target=\"_blank\" rel=\"noreferrer\">{listingId}</a></td>\r\n\t\t\t\t\t\t<td>{priceInGHST}</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t);\r\n\r\n\t\t\t\ttableRows.push(row);\r\n\t\t\t}\r\n\r\n\t\t\t// Get items name\r\n\t\t\tconst itemDetails = await this.contract.getItemType(item);\r\n\t\t\tconst name = itemDetails[0];\r\n\r\n\t\t\tconst table = (\r\n\t\t\t\t<div className=\"listings__card card\" key={item}>\r\n\r\n\t\t\t\t\t<h2 className=\"card__title\">{name} <small>({item})</small></h2>\r\n\r\n\t\t\t\t\t<table className=\"card__table\">\r\n\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<th>Listing</th>\r\n\t\t\t\t\t\t\t\t<th>Price</th>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t{tableRows}\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\r\n\t\t\tresults.push(table);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\ttables: results,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"listings\">{this.state.tables}</div>\r\n\t\t);\r\n\t}\r\n}","import { Component } from 'react';\r\n\r\nexport class NoListings extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div className=\"listings listings--none\">\r\n\t\t\t\t\t<p className=\"listings__warning\">There were no listings found.<br /> Try making your Percentage Difference smaller.</p>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t)\r\n\t}\r\n}","import { Component } from 'react';\r\n\r\nexport class Options extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.values = this.props.values;\r\n\r\n\t\tthis.categoryOptions = [\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Wearable',\r\n\t\t\t\tvalue: '0',\r\n\t\t\t\terc: '1155',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlabel: 'Consumable',\r\n\t\t\t\tvalue: '2',\r\n\t\t\t\terc: '1155',\r\n\t\t\t},\r\n\t\t];\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"options\">\r\n\t\t\t\t<form className=\"options__form\" onSubmit={this.props.handleOptionsSubmit}>\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<p>Collections:</p>\r\n\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\t\tclassName=\"options__input options__input--select\"\r\n\t\t\t\t\t\t\tdefaultValue={this.values.category}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{this.categoryOptions.map((option) => (\r\n\t\t\t\t\t\t\t\t<option key={option.value} value={option.value}>\r\n\t\t\t\t\t\t\t\t\t{option.label}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\tPercentage Difference:\r\n\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tname=\"difference\"\r\n\t\t\t\t\t\t\tclassName=\"options__input\"\r\n\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\tmax=\"99\"\r\n\t\t\t\t\t\t\tdefaultValue={this.values.valueDifference}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<input className=\"options__input options__input--submit\" type=\"submit\" value=\"Search\"/>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","import { Component } from 'react';\r\nimport { BigNumber, ethers } from 'ethers';\r\nimport abi from '../diamondABI/diamond.json';\r\nimport { Header } from './Header';\r\nimport { Loading } from './Loading';\r\nimport { Listings } from './Listings';\r\nimport { NoListings } from './NoListings';\r\nimport { Options } from './Options';\r\n\r\nexport class Dapp extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// Set the value to divide the price in wei by\r\n\t\tthis.divideBy = BigNumber.from('1000000000000000000');\r\n\r\n\t\t// Connect\r\n\t\tthis.aavegotchiContract = this.connect();\r\n\r\n\t\tthis.handleOptionsSubmit = this.handleOptionsSubmit.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t\tvalues: {\r\n\t\t\t\tcategory: 0,\r\n\t\t\t\tvalueDifference: 25,\r\n\t\t\t},\r\n\t\t\ttype: '1155',\r\n\t\t\tlistings: undefined,\r\n\t\t};\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.getListings();\r\n\t}\r\n\r\n\tconnect() {\r\n\t\t// Create the connection\r\n\t\tconst provider = new ethers.providers.JsonRpcProvider('https://rpc-mainnet.matic.network');\r\n\r\n\t\t// Set the aavegotchi address\r\n\t\tconst aavegotchiAddress = '0x86935F11C86623deC8a25696E1C19a8659CbF95d';\r\n\r\n\t\t// Get the aavegotchi contract\r\n\t\tconst aavegotchiContract = new ethers.Contract(aavegotchiAddress, abi, provider);\r\n\r\n\t\t// Connect to the aavegotchi contract\r\n\t\treturn aavegotchiContract.connect(provider);\r\n\t}\r\n\r\n\torderItems(listing) {\r\n\t\treturn listing.sort((a, b) => a['priceInGHST'] - b['priceInGHST']);\r\n\t}\r\n\r\n\tasync groupListings() {\r\n\t\t// const category = await this.state.category;\r\n\t\t// Get the listings in the baazaar\r\n\t\tconst listings = await this.aavegotchiContract.getERC1155Listings(this.state.values.category, 'listed', 3500);\r\n\r\n\t\t// Set an object to store the formatted listings\r\n\t\tconst formattedListings = {};\r\n\r\n\t\t// Loop over each listing\r\n\t\tfor (const listing of listings) {\r\n\t\t\t// Get the data needed from the listing\r\n\t\t\tconst { listingId, erc1155TypeId, priceInWei } = listing;\r\n\t\r\n\t\t\t// We know these numbers are safe for JS, so convert them\r\n\t\t\tconst formattedTypeId = erc1155TypeId.toNumber();\r\n\t\t\tconst formattedListingId = listingId.toNumber();\r\n\t\r\n\t\t\t// Divide the price in wei to get the value in GHST\r\n\t\t\tconst formattedpriceInWei = priceInWei.div(this.divideBy);\r\n\t\t\t// We know this will be a safe low number now\r\n\t\t\tconst priceInGHST = formattedpriceInWei.toNumber();\r\n\r\n\t\t\t// If the type ID doesn't exist as a key, add it\r\n\t\t\tif (!formattedListings.hasOwnProperty(formattedTypeId)) formattedListings[formattedTypeId] = [];\r\n\r\n\t\t\t// Pass the object we'd like to place within the type array\r\n\t\t\tformattedListings[formattedTypeId].push({\r\n\t\t\t\tlistingId: formattedListingId,\r\n\t\t\t\tpriceInGHST,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn formattedListings;\r\n\t}\r\n\r\n\tasync orderGroupedListings(groupedListings) {\r\n\t\tconst listings = await groupedListings;\r\n\r\n\t\t// Set an object to store the ordered listings\r\n\t\tconst orderedListings = {};\r\n\t\r\n\t\tfor (const [item, listing] of Object.entries(listings)) {\r\n\t\t\t// Don't order or include if only one for sale\r\n\t\t\tif (listing.length <= 1) continue;\r\n\r\n\t\t\t// Get the items ordered by priceInGHST\r\n\t\t\tconst ordered = this.orderItems(listing);\r\n\r\n\t\t\t// Get the lowest priced item\r\n\t\t\tconst lowest = listing[0]['priceInGHST'];\r\n\t\t\t// Get the second lowest priced item\r\n\t\t\tconst secondLowest = listing[1]['priceInGHST'];\r\n\t\t\tconst diff = ((secondLowest - lowest) / secondLowest) * 100;\r\n\r\n\t\t\t// Only add it to the list if the difference is over a certain amount (25)\r\n\t\t\tif (diff >= this.state.values.valueDifference) {\r\n\t\t\t\t// Cut down the list\r\n\t\t\t\tconst orderedSlice = ordered.slice(0, 5);\r\n\t\r\n\t\t\t\t// Add the ordered items to the item object\r\n\t\t\t\torderedListings[item] = orderedSlice;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn orderedListings;\r\n\t};\r\n\t\r\n\tasync getListings() {\r\n\t\t/**\r\n\t\t * Looked to set the getListings _length with the amount of add listing events\r\n\t\t * However, it's both too slow, and the result is too large\r\n\t\t * The given number cause a MetaMask crash. It can't estimate gas\r\n\t\t * \r\n\t\t * const listingAddEvent = this.aavegotchiContract.filters.ERC1155ListingAdd();\r\n\t\t * const listingCount = await this.aavegotchiContract.queryFilter(listingAddEvent);\r\n\t\t */\r\n\r\n\t\t// Get the grouped listings\r\n\t\tconst grouped = this.groupListings();\r\n\r\n\t\t// Order each group\r\n\t\tconst orderListings = await this.orderGroupedListings(grouped);\r\n\r\n\t\t// Set the state\r\n\t\tthis.setState({listings: orderListings})\r\n\t}\r\n\r\n\thandleOptionsSubmit(e) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst newCategory = parseInt(e.target.category.value);\r\n\t\tconst newDifference = parseInt(e.target.difference.value);\r\n\r\n\t\tthis.setState({\r\n\t\t\tvalues: {\r\n\t\t\t\tcategory: newCategory,\r\n\t\t\t\tvalueDifference: newDifference,\r\n\t\t\t},\r\n\t\t\tlistings: undefined,\r\n\t\t},\r\n\t\tthis.getListings);\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.state.listings) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Options handleOptionsSubmit={this.handleOptionsSubmit} values={this.state.values} />\r\n\t\t\t\t\t<Loading />\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (Object.keys(this.state.listings).length) {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Options handleOptionsSubmit={this.handleOptionsSubmit} values={this} />\r\n\t\t\t\t\t<Listings listings={this.state.listings} contract={this.aavegotchiContract} />\r\n\t\t\t\t</>\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header />\r\n\t\t\t\t<Options handleOptionsSubmit={this.handleOptionsSubmit} values={this} />\r\n\t\t\t\t<NoListings />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Dapp } from './components/Dapp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Dapp category=\"0\" />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}